요구사항 : 
사용자는 이미지 리스트 화면에서 삭제하고자 하는 이미지의 '삭제' 버튼을 클릭하여 이미지 삭제를 한다.

1. 준비사항 : form.py -> DeleteForm() 활용
              @dt.route("/images/delete/<string:image_id>",methods=["POST"])

2. 사용자 화면 삭제 form : views.py : DeleteForm()객체생성, attribute 추가
			   DeleteForm() -> index.html 반영, csrf_token 파라메터
                           <button> 만 존재
			   action="/images/delete/{{user_image.UserImage.id}}"
			   method="post"
			   업로드 사용자와 로그인 사용자가 같을 때만 버튼 출력.
			   -> {% if current_user.id == user_image.User.id %}

3. @dt.route("/images/delete/<string:image_id>",methods=["POST"]) 데이터 확인
   image_id 확인 : print(image_id) --> OK
   
   image_id 로 Dtatbase의 이미지 데이터 조회 -> 이미지경로...
   user_image = db.session.query(UserImage).filter(UserImage.id == image_id).first()
   target_image_path = Path(current_app.config["UPLOAD_FOLDER"], user_image.image_path)
 
   이미지 삭제.
   import os 해서 os.delete()하지만 관행적으로 이미지 유무확인 필수.
   익세셥 발생시 rollback()

   database 삭제.(user_image, user_image_tag)

   image_id로 user_image_tag 테이블에서 데이터 조회 후 삭제
   db.session.query(UserImageTag).filter(UserImageTag.user_image_id == image_id).delete()

   image_id로 user_image 테이블에서 데이터 조회 후 삭제
   db.session.query(UserImage).filter(UserImage.id == image_id).delete()

   db.session.commit()
  





